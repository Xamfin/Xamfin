/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.7.6
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Jellyfin.Api.Client;
using Jellyfin.Api.Api;
using Jellyfin.Api.Model;

namespace Jellyfin.Api.Test
{
    /// <summary>
    ///  Class for testing SyncPlayApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SyncPlayApiTests
    {
        private SyncPlayApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SyncPlayApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SyncPlayApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' SyncPlayApi
            //Assert.IsInstanceOf(typeof(SyncPlayApi), instance);
        }

        
        /// <summary>
        /// Test SyncPlayBuffering
        /// </summary>
        [Test]
        public void SyncPlayBufferingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayBuffering(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayCreateGroup
        /// </summary>
        [Test]
        public void SyncPlayCreateGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayCreateGroup(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayGetGroups
        /// </summary>
        [Test]
        public void SyncPlayGetGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SyncPlayGetGroups();
            //Assert.IsInstanceOf(typeof(List<GroupInfoDto>), response, "response is List<GroupInfoDto>");
        }
        
        /// <summary>
        /// Test SyncPlayJoinGroup
        /// </summary>
        [Test]
        public void SyncPlayJoinGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayJoinGroup(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayLeaveGroup
        /// </summary>
        [Test]
        public void SyncPlayLeaveGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SyncPlayLeaveGroup();
            
        }
        
        /// <summary>
        /// Test SyncPlayMovePlaylistItem
        /// </summary>
        [Test]
        public void SyncPlayMovePlaylistItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayMovePlaylistItem(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayNextItem
        /// </summary>
        [Test]
        public void SyncPlayNextItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayNextItem(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayPause
        /// </summary>
        [Test]
        public void SyncPlayPauseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SyncPlayPause();
            
        }
        
        /// <summary>
        /// Test SyncPlayPing
        /// </summary>
        [Test]
        public void SyncPlayPingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayPing(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayPreviousItem
        /// </summary>
        [Test]
        public void SyncPlayPreviousItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayPreviousItem(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayQueue
        /// </summary>
        [Test]
        public void SyncPlayQueueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayQueue(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayReady
        /// </summary>
        [Test]
        public void SyncPlayReadyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayReady(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayRemoveFromPlaylist
        /// </summary>
        [Test]
        public void SyncPlayRemoveFromPlaylistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlayRemoveFromPlaylist(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlaySeek
        /// </summary>
        [Test]
        public void SyncPlaySeekTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlaySeek(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlaySetIgnoreWait
        /// </summary>
        [Test]
        public void SyncPlaySetIgnoreWaitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlaySetIgnoreWait(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlaySetNewQueue
        /// </summary>
        [Test]
        public void SyncPlaySetNewQueueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlaySetNewQueue(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlaySetPlaylistItem
        /// </summary>
        [Test]
        public void SyncPlaySetPlaylistItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlaySetPlaylistItem(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlaySetRepeatMode
        /// </summary>
        [Test]
        public void SyncPlaySetRepeatModeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlaySetRepeatMode(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlaySetShuffleMode
        /// </summary>
        [Test]
        public void SyncPlaySetShuffleModeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SyncPlaySetShuffleMode(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test SyncPlayStop
        /// </summary>
        [Test]
        public void SyncPlayStopTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SyncPlayStop();
            
        }
        
        /// <summary>
        /// Test SyncPlayUnpause
        /// </summary>
        [Test]
        public void SyncPlayUnpauseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SyncPlayUnpause();
            
        }
        
    }

}
