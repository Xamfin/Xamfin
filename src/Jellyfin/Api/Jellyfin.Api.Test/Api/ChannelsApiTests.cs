/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.7.6
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Jellyfin.Api.Client;
using Jellyfin.Api.Api;
using Jellyfin.Api.Model;

namespace Jellyfin.Api.Test
{
    /// <summary>
    ///  Class for testing ChannelsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChannelsApiTests
    {
        private ChannelsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ChannelsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ChannelsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ChannelsApi
            //Assert.IsInstanceOf(typeof(ChannelsApi), instance);
        }

        
        /// <summary>
        /// Test GetAllChannelFeatures
        /// </summary>
        [Test]
        public void GetAllChannelFeaturesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllChannelFeatures();
            //Assert.IsInstanceOf(typeof(List<ChannelFeatures>), response, "response is List<ChannelFeatures>");
        }
        
        /// <summary>
        /// Test GetChannelFeatures
        /// </summary>
        [Test]
        public void GetChannelFeaturesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid channelId = null;
            //var response = instance.GetChannelFeatures(channelId);
            //Assert.IsInstanceOf(typeof(ChannelFeatures), response, "response is ChannelFeatures");
        }
        
        /// <summary>
        /// Test GetChannelItems
        /// </summary>
        [Test]
        public void GetChannelItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid channelId = null;
            //Guid? folderId = null;
            //Guid? userId = null;
            //int? startIndex = null;
            //int? limit = null;
            //List<SortOrder> sortOrder = null;
            //List<ItemFilter> filters = null;
            //List<string> sortBy = null;
            //List<ItemFields> fields = null;
            //var response = instance.GetChannelItems(channelId, folderId, userId, startIndex, limit, sortOrder, filters, sortBy, fields);
            //Assert.IsInstanceOf(typeof(BaseItemDtoQueryResult), response, "response is BaseItemDtoQueryResult");
        }
        
        /// <summary>
        /// Test GetChannels
        /// </summary>
        [Test]
        public void GetChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? userId = null;
            //int? startIndex = null;
            //int? limit = null;
            //bool? supportsLatestItems = null;
            //bool? supportsMediaDeletion = null;
            //bool? isFavorite = null;
            //var response = instance.GetChannels(userId, startIndex, limit, supportsLatestItems, supportsMediaDeletion, isFavorite);
            //Assert.IsInstanceOf(typeof(BaseItemDtoQueryResult), response, "response is BaseItemDtoQueryResult");
        }
        
        /// <summary>
        /// Test GetLatestChannelItems
        /// </summary>
        [Test]
        public void GetLatestChannelItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? userId = null;
            //int? startIndex = null;
            //int? limit = null;
            //List<ItemFilter> filters = null;
            //List<ItemFields> fields = null;
            //List<Guid> channelIds = null;
            //var response = instance.GetLatestChannelItems(userId, startIndex, limit, filters, fields, channelIds);
            //Assert.IsInstanceOf(typeof(BaseItemDtoQueryResult), response, "response is BaseItemDtoQueryResult");
        }
        
    }

}
