/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.7.6
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Jellyfin.Api.Client;
using Jellyfin.Api.Api;
using Jellyfin.Api.Model;

namespace Jellyfin.Api.Test
{
    /// <summary>
    ///  Class for testing SearchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SearchApiTests
    {
        private SearchApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SearchApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SearchApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' SearchApi
            //Assert.IsInstanceOf(typeof(SearchApi), instance);
        }

        
        /// <summary>
        /// Test Get
        /// </summary>
        [Test]
        public void GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string searchTerm = null;
            //int? startIndex = null;
            //int? limit = null;
            //Guid? userId = null;
            //List<string> includeItemTypes = null;
            //List<string> excludeItemTypes = null;
            //List<string> mediaTypes = null;
            //Guid? parentId = null;
            //bool? isMovie = null;
            //bool? isSeries = null;
            //bool? isNews = null;
            //bool? isKids = null;
            //bool? isSports = null;
            //bool? includePeople = null;
            //bool? includeMedia = null;
            //bool? includeGenres = null;
            //bool? includeStudios = null;
            //bool? includeArtists = null;
            //var response = instance.Get(searchTerm, startIndex, limit, userId, includeItemTypes, excludeItemTypes, mediaTypes, parentId, isMovie, isSeries, isNews, isKids, isSports, includePeople, includeMedia, includeGenres, includeStudios, includeArtists);
            //Assert.IsInstanceOf(typeof(SearchHintResult), response, "response is SearchHintResult");
        }
        
    }

}
