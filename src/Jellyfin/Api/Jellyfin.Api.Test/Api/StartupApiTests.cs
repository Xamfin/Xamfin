/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.7.6
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Jellyfin.Api.Client;
using Jellyfin.Api.Api;
using Jellyfin.Api.Model;

namespace Jellyfin.Api.Test
{
    /// <summary>
    ///  Class for testing StartupApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StartupApiTests
    {
        private StartupApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StartupApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StartupApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' StartupApi
            //Assert.IsInstanceOf(typeof(StartupApi), instance);
        }

        
        /// <summary>
        /// Test CompleteWizard
        /// </summary>
        [Test]
        public void CompleteWizardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.CompleteWizard();
            
        }
        
        /// <summary>
        /// Test GetFirstUser
        /// </summary>
        [Test]
        public void GetFirstUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetFirstUser();
            //Assert.IsInstanceOf(typeof(StartupUserDto), response, "response is StartupUserDto");
        }
        
        /// <summary>
        /// Test GetFirstUser2
        /// </summary>
        [Test]
        public void GetFirstUser2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetFirstUser2();
            //Assert.IsInstanceOf(typeof(StartupUserDto), response, "response is StartupUserDto");
        }
        
        /// <summary>
        /// Test GetStartupConfiguration
        /// </summary>
        [Test]
        public void GetStartupConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetStartupConfiguration();
            //Assert.IsInstanceOf(typeof(StartupConfigurationDto), response, "response is StartupConfigurationDto");
        }
        
        /// <summary>
        /// Test SetRemoteAccess
        /// </summary>
        [Test]
        public void SetRemoteAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.SetRemoteAccess(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test UpdateInitialConfiguration
        /// </summary>
        [Test]
        public void UpdateInitialConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.UpdateInitialConfiguration(UNKNOWN_BASE_TYPE);
            
        }
        
        /// <summary>
        /// Test UpdateStartupUser
        /// </summary>
        [Test]
        public void UpdateStartupUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
            //instance.UpdateStartupUser(UNKNOWN_BASE_TYPE);
            
        }
        
    }

}
